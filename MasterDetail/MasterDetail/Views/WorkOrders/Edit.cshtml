@model MasterDetail.Models.WorkOrder

<h2>Edit Work Order</h2>

<div id="parts-modal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="parts-modal-content"></div>
        </div>
    </div>
</div>
<div id="laborsModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="laborsModalContent"></div>
        </div>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>WorkOrder</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.WorkOrderId)
    @Html.HiddenFor(model => model.CustomerId)

    <div class="form-group form-group-sm">
        @Html.LabelFor(model => model.CustomerId, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Customer.CompanyName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group form-group-sm">
        @Html.LabelFor(model => model.OrderDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrderDateTime, "DateReadOnly")
        </div>
    </div>

    <div class="form-group form-group-sm">
        @Html.LabelFor(model => model.TargetDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TargetDateTime, "DateWithPicker")
            @Html.ValidationMessageFor(model => model.TargetDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group form-group-sm">
        @Html.LabelFor(model => model.DropDeadDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DropDeadDateTime, "DateWithPicker")
            @Html.ValidationMessageFor(model => model.DropDeadDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group form-group-sm">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group form-group-sm">
        @Html.LabelFor(model => model.WorkOrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WorkOrderStatus, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group form-group-sm">
        @Html.LabelFor(model => model.CertificationRequirements, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CertificationRequirements, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CertificationRequirements, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group form-group-sm">
        @Html.LabelFor(model => model.CurrentWorkerId, "Current Worker", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentWorker.FullName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="row">
        <div class="col-md-offset-2 col-md-10">
            @{Html.RenderAction("Index", "Parts", new { workOrderId = Model.WorkOrderId });}
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-2 col-md-10">
            @{Html.RenderAction("Index", "Labors", new { workOrderId = Model.WorkOrderId });}
        </div>
    </div>

    <div class="form-group form-group-sm">
        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Total, "CustomNumberFormat", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>


    <div class="form-group form-group-sm">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/workorder.js"></script>
}
